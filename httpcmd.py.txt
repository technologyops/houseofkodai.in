#!/usr/bin/python
# 13 Mar 2012: karthik@houseofkodai.in
#   * quick and dirty command execution via. http
#   * inspired by:
#     http://pythonpaste.org/do-it-yourself-framework.html
#   * user/beware: harakiri
#      + running this on a public internet IP
#      + running this as root
#   * works with uwsgi also
#     uwsgi --http :8010 --module httpcmd
#   * docmd and authapp can be used in other projects too
#
import uwsgi, subprocess, time

def docmd(cmdline, timeout=2):
  '''
  will execute a command within timeout seconds
  returns (exitcode, stdout, stderr)
  '''
  try:
    ph = subprocess.Popen(cmdline, shell=False, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  except OSError, e:
    return (e.errno, '', '%s\n%s'%(' '.join(cmdline), str(e)))
  if not timeout:
    rc = ph.wait()
  else:
    ptimeout = time.time() + timeout
    while (ph.poll() == None) and (ptimeout > time.time()): time.sleep(1)
    if ptimeout < time.time(): ph.terminate()
    rc = ph.returncode
  (so, se) = ph.communicate()
  return (rc, so, se)

class authapp(object):
  def __init__(self, app, usrpasswd={}):
    self.app = app
    self.usrpasswd = usrpasswd
  def authorized(self, hauth):
    if not hauth: return False
    (atype, avalue) = hauth.split(None, 1)
    if not 'basic' == atype.lower(): return False
    uname,passwd = avalue.decode('base64').split(':',1)
    return (passwd == self.usrpasswd.get(uname))
  def __call__(self, environ, start_response):
    if self.authorized(environ.get('HTTP_AUTHORIZATION')):
      return self.app(environ, start_response)
    start_response('401 Authentication Required',
                   [('Content-type', 'text/plain'),
                    ('WWW-Authenticate', 'Basic realm="httpcmd"')])
    return [':-( dont mess with me )-:']

def qstimeout(env, default=2):
  params = {}
  for item in env.get('QUERY_STRING', '').split('&'):
    kv = item.split('=',1)
    if len(kv) == 2: v = kv[1].strip()
    else: v = ''
    params[kv[0].strip()] = v
  try: t = int(params['t'])
  except: t = default
  #commout-out the following, if you really know what you are doing...
  if t == 0: t = default
  return t

def _application(env, start_response):
  pi = env['PATH_INFO']
  start_response('200 OK', [('Content-Type', 'text/plain')])
  #ignore common requests
  if pi in ('/', '/favicon.ico'): return []
  cmdline = pi[1:].split(' ') #ignore the first /
  return docmd(cmdline, qstimeout(env))[1:] #ignore the exitcode

#uncomment one of the following, as reqd.
application = _application
#application = authapp(_application, {'admin':'letmein'})

if __name__ == '__main__':
  from wsgiref.simple_server import make_server
  #set the ip/port, as reqd.
  httpd = make_server('0.0.0.0', 8010, application)
  httpd.serve_forever()

